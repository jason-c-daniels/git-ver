#!/bin/bash
set -e
get_script_dir () {
     SOURCE="${BASH_SOURCE[0]}"
     # While $SOURCE is a symlink, resolve it
     while [ -h "$SOURCE" ]; do
          DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
          SOURCE="$( readlink "$SOURCE" )"
          # If $SOURCE was a relative symlink (so no "/" as prefix, need to resolve it relative to the symlink base directory
          [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
     done
     DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
     echo "$DIR"
}
GIT_VER_DIR=$(get_script_dir)
pushd "$GIT_VER_DIR"
echo "
usage: git-ver get-suffix [-r] [-d]
get-suffix : Gets the semantic version suffix. 

To establish a suffix, the following steps are taken.
    1. The candidate revision number is retrieved.
    2. If present, the suffix from the latest tag is used.
    3. If no tag suffix is extract, the branch name is used instead.
    4. The master branch gets no suffix. Only actual releases happen from it.
    5. A branch with a name starting with release gets the suffix of -rc
    6. A branch with a name starting with develop gets the suffix of -pre
    7. A branch with a name starting with feature gets the suffix of -beta
    8. All other branches get a suffix of -alpha

There are two additional optional meta data parameters.
    -r | --rev  : This includes the results of git-ver get-rev as metadata after the main part of the suffix. For example: -rc+5
    -d | --date : This includes the build date and time in the following format: YYMMDD.HHmmss. For example: -alpha+20180606.211206

    -r and -d can be used with each other. When this is done -r is appended first, then -d. For example: -rc+5+20180806.011033

    NOTE: -r and -d are passed on tho this command when calling git-ver get-semver
"